<!DOCTYPE html>
<html>
<head>
  <base target="_top">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</title>
  
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Sarabun', 'Segoe UI', Tahoma, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      padding: 20px;
    }
    
    .container {
      max-width: 1400px;
      margin: 0 auto;
    }
    
    .header {
      background: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }
    
    .header h1 {
      color: #667eea;
      margin-bottom: 10px;
    }
    
    .user-info {
      color: #666;
      font-size: 14px;
    }
    
    .loading {
      text-align: center;
      padding: 40px;
      color: white;
      font-size: 18px;
    }
    
    .error {
      background: #ff4444;
      color: white;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    
    .budget-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }
    
    .budget-card {
      background: white;
      border-radius: 12px;
      padding: 0;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
      transition: transform 0.2s;
      overflow: hidden;
    }
    
    .budget-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 16px rgba(0,0,0,0.15);
    }
    
    .card-header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 20px;
    }
    
    .department {
      font-weight: bold;
      font-size: 16px;
      margin-bottom: 5px;
    }
    
    .card-body {
      padding: 20px;
    }
    
    .detail-section {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 15px;
      border-left: 4px solid #667eea;
    }
    
    .detail-row {
      display: flex;
      margin-bottom: 8px;
      font-size: 14px;
    }
    
    .detail-row:last-child {
      margin-bottom: 0;
    }
    
    .detail-label {
      font-weight: bold;
      color: #555;
      min-width: 120px;
      flex-shrink: 0;
    }
    
    .detail-value {
      color: #333;
      flex: 1;
    }
    
    .budget-summary {
      background: white;
      border: 2px solid #e0e0e0;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 15px;
    }
    
    .summary-row {
      display: flex;
      justify-content: space-between;
      padding: 10px 0;
      border-bottom: 1px solid #eee;
    }
    
    .summary-row:last-child {
      border-bottom: none;
    }
    
    .summary-label {
      color: #666;
      font-size: 14px;
      font-weight: 500;
    }
    
    .summary-value {
      font-weight: bold;
      font-size: 16px;
    }
    
    .amount-budget { color: #4CAF50; }
    .amount-used { color: #FF9800; }
    .amount-remaining { color: #2196F3; }
    
    .progress-bar {
      height: 10px;
      background: #eee;
      border-radius: 5px;
      overflow: hidden;
      margin: 10px 0;
    }
    
    .progress-fill {
      height: 100%;
      background: linear-gradient(90deg, #4CAF50, #FF9800);
      transition: width 0.3s;
    }
    
    .progress-text {
      text-align: center;
      color: #666;
      font-size: 13px;
      margin-top: 5px;
      font-weight: 500;
    }
    
    .card-actions {
      display: flex;
      gap: 10px;
      padding: 0 20px 20px 20px;
    }
    
    .btn {
      flex: 1;
      padding: 12px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: 14px;
      font-weight: bold;
      transition: all 0.2s;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 5px;
    }
    
    .btn-primary {
      background: #667eea;
      color: white;
    }
    
    .btn-primary:hover {
      background: #5568d3;
      transform: scale(1.02);
    }
    
    .btn-secondary {
      background: #e0e0e0;
      color: #333;
    }
    
    .btn-secondary:hover {
      background: #d0d0d0;
    }
    
    /* Modal */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }
    
    .modal.active {
      display: flex;
    }
    
    .modal-content {
      background: white;
      padding: 30px;
      border-radius: 12px;
      max-width: 600px;
      width: 90%;
      max-height: 90vh;
      overflow-y: auto;
    }
    
    .modal-header {
      border-bottom: 3px solid #667eea;
      padding-bottom: 15px;
      margin-bottom: 20px;
    }
    
    .modal-header h2 {
      color: #667eea;
      margin-bottom: 8px;
    }
    
    .modal-subtitle {
      color: #666;
      font-size: 14px;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-label {
      display: block;
      margin-bottom: 8px;
      color: #333;
      font-weight: bold;
      font-size: 14px;
    }
    
    .form-input {
      width: 100%;
      padding: 12px;
      border: 2px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
      transition: border-color 0.2s;
    }
    
    .form-input:focus {
      outline: none;
      border-color: #667eea;
    }
    
    .modal-actions {
      display: flex;
      gap: 10px;
      margin-top: 20px;
    }
    
    .history-item {
      padding: 15px;
      background: #f8f9fa;
      border-radius: 8px;
      margin-bottom: 12px;
      border-left: 4px solid #667eea;
    }
    
    .history-date {
      font-size: 12px;
      color: #666;
      margin-bottom: 8px;
    }
    
    .history-amount {
      font-weight: bold;
      color: #FF9800;
      margin: 8px 0;
      font-size: 16px;
    }
    
    .history-desc {
      font-size: 14px;
      color: #333;
      margin: 8px 0;
    }
    
    .history-summary {
      font-size: 12px;
      color: #666;
      margin-top: 8px;
      padding-top: 8px;
      border-top: 1px solid #ddd;
    }
    
    @media (max-width: 768px) {
      .budget-grid {
        grid-template-columns: 1fr;
      }
      
      .detail-label {
        min-width: 100px;
      }
      
      #filterSection > div:first-child {
        grid-template-columns: 1fr !important;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
        <div>
          <h1>üìä ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</h1>
          <div class="user-info">
            <span id="userEmail">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</span>
          </div>
        </div>
        <div style="display: flex; gap: 10px;">
          <button onclick="showDashboard()" style="padding: 10px 20px; background: #667eea; color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: bold;">
            üìà Dashboard
          </button>
          <button onclick="logout()" style="padding: 10px 20px; background: #ff4444; color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: bold;">
            üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
          </button>
        </div>
      </div>
      
      <!-- Search and Filter Section -->
      <div id="filterSection" style="display: none; margin-top: 20px; padding-top: 20px; border-top: 2px solid #e0e0e0;">
        <div style="display: grid; grid-template-columns: 1fr 1fr 1fr 1fr; gap: 10px; margin-bottom: 10px;">
          <div>
            <label style="display: block; margin-bottom: 5px; font-size: 13px; color: #666; font-weight: bold;">üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</label>
            <input type="text" id="searchBox" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå..." style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px; font-size: 14px;">
          </div>
          <div>
            <label style="display: block; margin-bottom: 5px; font-size: 13px; color: #666; font-weight: bold;">‡∏á‡∏≤‡∏ô</label>
            <select id="filterWork" style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px; font-size: 14px;">
              <option value="">-- ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î --</option>
            </select>
          </div>
          <div>
            <label style="display: block; margin-bottom: 5px; font-size: 13px; color: #666; font-weight: bold;">‡∏á‡∏ö‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢</label>
            <select id="filterBudgetType" style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px; font-size: 14px;">
              <option value="">-- ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î --</option>
            </select>
          </div>
          <div>
            <label style="display: block; margin-bottom: 5px; font-size: 13px; color: #666; font-weight: bold;">‡∏´‡∏°‡∏ß‡∏î‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢</label>
            <select id="filterCategory" style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px; font-size: 14px;">
              <option value="">-- ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î --</option>
            </select>
          </div>
        </div>
        <div style="display: flex; justify-content: space-between; align-items: center;">
          <div style="color: #666; font-size: 14px;">
            ‡πÅ‡∏™‡∏î‡∏á <strong id="itemCount">0</strong> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
          </div>
          <button onclick="clearFilters()" style="padding: 8px 16px; background: #e0e0e0; color: #333; border: none; border-radius: 6px; cursor: pointer; font-size: 13px; font-weight: bold;">
            üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á
          </button>
        </div>
      </div>
    </div>
    
    <div id="loadingDiv" class="loading">
      <div>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>
    </div>
    
    <div id="errorDiv" class="error" style="display: none;"></div>
    
    <div id="budgetContainer" class="budget-grid" style="display: none;">
      <!-- Budget cards will be inserted here -->
    </div>
  </div>
  
  <!-- Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ -->
  <div id="expenseModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>üí∞ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢</h2>
        <div id="modalProjectDetails" class="modal-subtitle"></div>
      </div>
      
      <form id="expenseForm">
        <div class="form-group">
          <label class="form-label">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó) *</label>
          <input type="number" id="expenseAmount" class="form-input" required min="0" step="0.01" placeholder="0.00">
        </div>
        
        <div class="form-group">
          <label class="form-label">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</label>
          <textarea id="expenseDescription" class="form-input" rows="3" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢..."></textarea>
        </div>
        
        <div class="modal-actions">
          <button type="submit" class="btn btn-primary">‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
          <button type="button" class="btn btn-secondary" onclick="closeExpenseModal()">‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
        </div>
      </form>
    </div>
  </div>
  
  <!-- Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ -->
  <div id="historyModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</h2>
        <div id="historyProjectDetails" class="modal-subtitle"></div>
      </div>
      
      <div id="historyContainer">
        <!-- History items will be inserted here -->
      </div>
      
      <div class="modal-actions">
        <button type="button" class="btn btn-secondary" onclick="closeHistoryModal()">‡∏õ‡∏¥‡∏î</button>
      </div>
    </div>
  </div>

  <script>
    let currentBudgetItems = [];
    let allBudgetItems = []; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏ß‡πâ filter
    let selectedRowIndex = null;
    let selectedItem = null;
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤
    window.onload = function() {
      loadBudgetData();
      setupFilterListeners();
    };
    
    function setupFilterListeners() {
      document.getElementById('searchBox').addEventListener('input', applyFilters);
      document.getElementById('filterWork').addEventListener('change', applyFilters);
      document.getElementById('filterBudgetType').addEventListener('change', applyFilters);
      document.getElementById('filterCategory').addEventListener('change', applyFilters);
    }
    
    function loadBudgetData() {
      google.script.run
        .withSuccessHandler(displayBudgetData)
        .withFailureHandler(function(error) {
          console.error('Error:', error);
          showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
        })
        .getBudgetItems();
    }
    
    function displayBudgetData(result) {
      console.log('Result:', result);
      document.getElementById('loadingDiv').style.display = 'none';
      
      if (!result) {
        showError('‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Server ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        return;
      }
      
      if (!result.success) {
        showError(result.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏');
        return;
      }
      
      if (!result.user) {
        showError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• User ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Sheet "Users" ‡πÅ‡∏•‡∏∞‡∏°‡∏µ Email ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
        return;
      }
      
      document.getElementById('userEmail').textContent = 
        'üë§ ' + result.user.email + ' | ' + result.user.department + 
        (result.user.role === 'admin' ? ' (‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö)' : '');
      
      allBudgetItems = result.items;
      currentBudgetItems = result.items;
      
      if (result.items.length === 0) {
        document.getElementById('errorDiv').textContent = 
          '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏™‡∏≥‡∏ô‡∏±‡∏Å/‡∏Å‡∏≠‡∏á: ' + result.user.department + ')';
        document.getElementById('errorDiv').style.display = 'block';
        return;
      }
      
      // ‡πÅ‡∏™‡∏î‡∏á filter section
      document.getElementById('filterSection').style.display = 'block';
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á filter options
      populateFilterOptions(result.items);
      
      renderBudgetCards(result.items);
      updateItemCount(result.items.length);
      document.getElementById('budgetContainer').style.display = 'grid';
    }
    
    function populateFilterOptions(items) {
      const works = [...new Set(items.map(i => i.work).filter(x => x))];
      const budgetTypes = [...new Set(items.map(i => i.budgetType).filter(x => x))];
      const categories = [...new Set(items.map(i => i.category).filter(x => x))];
      
      const filterWork = document.getElementById('filterWork');
      const filterBudgetType = document.getElementById('filterBudgetType');
      const filterCategory = document.getElementById('filterCategory');
      
      filterWork.innerHTML = '<option value="">-- ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î --</option>';
      works.forEach(w => {
        filterWork.innerHTML += `<option value="${w}">${w}</option>`;
      });
      
      filterBudgetType.innerHTML = '<option value="">-- ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î --</option>';
      budgetTypes.forEach(b => {
        filterBudgetType.innerHTML += `<option value="${b}">${b}</option>`;
      });
      
      filterCategory.innerHTML = '<option value="">-- ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î --</option>';
      categories.forEach(c => {
        filterCategory.innerHTML += `<option value="${c}">${c}</option>`;
      });
    }
    
    function applyFilters() {
      const searchText = document.getElementById('searchBox').value.toLowerCase();
      const filterWork = document.getElementById('filterWork').value;
      const filterBudgetType = document.getElementById('filterBudgetType').value;
      const filterCategory = document.getElementById('filterCategory').value;
      
      let filtered = allBudgetItems.filter(item => {
        // Search filter (‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏∏‡∏Å field)
        const searchMatch = !searchText || 
          Object.values(item).some(val => 
            val && val.toString().toLowerCase().includes(searchText)
          );
        
        // Dropdown filters
        const workMatch = !filterWork || item.work === filterWork;
        const budgetTypeMatch = !filterBudgetType || item.budgetType === filterBudgetType;
        const categoryMatch = !filterCategory || item.category === filterCategory;
        
        return searchMatch && workMatch && budgetTypeMatch && categoryMatch;
      });
      
      currentBudgetItems = filtered;
      renderBudgetCards(filtered);
      updateItemCount(filtered.length);
    }
    
    function clearFilters() {
      document.getElementById('searchBox').value = '';
      document.getElementById('filterWork').value = '';
      document.getElementById('filterBudgetType').value = '';
      document.getElementById('filterCategory').value = '';
      applyFilters();
    }
    
    function updateItemCount(count) {
      document.getElementById('itemCount').textContent = count;
    }
    
    function renderBudgetCards(items) {
      const container = document.getElementById('budgetContainer');
      container.innerHTML = '';
      
      items.forEach(item => {
        const percentage = item.budget > 0 ? (item.used / item.budget * 100).toFixed(1) : 0;
        
        const card = document.createElement('div');
        card.className = 'budget-card';
        card.innerHTML = `
          <div class="card-header">
            <div class="department">${item.department || '-'}</div>
          </div>
          
          <div class="card-body">
            <div class="detail-section">
              ${item.work ? `<div class="detail-row">
                <span class="detail-label">‡∏á‡∏≤‡∏ô:</span>
                <span class="detail-value">${item.work}</span>
              </div>` : ''}
              ${item.budgetType ? `<div class="detail-row">
                <span class="detail-label">‡∏á‡∏ö‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢:</span>
                <span class="detail-value">${item.budgetType}</span>
              </div>` : ''}
              ${item.category ? `<div class="detail-row">
                <span class="detail-label">‡∏´‡∏°‡∏ß‡∏î‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢:</span>
                <span class="detail-value">${item.category}</span>
              </div>` : ''}
              ${item.expenseType ? `<div class="detail-row">
                <span class="detail-label">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢:</span>
                <span class="detail-value">${item.expenseType}</span>
              </div>` : ''}
              ${item.item ? `<div class="detail-row">
                <span class="detail-label">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</span>
                <span class="detail-value">${item.item}</span>
              </div>` : ''}
            </div>
            
            <div class="budget-summary">
              <div class="summary-row">
                <span class="summary-label">‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</span>
                <span class="summary-value amount-budget">${formatNumber(item.budget)} ‡∏ø</span>
              </div>
              <div class="summary-row">
                <span class="summary-label">‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß</span>
                <span class="summary-value amount-used">${formatNumber(item.used)} ‡∏ø</span>
              </div>
              <div class="summary-row">
                <span class="summary-label">‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠</span>
                <span class="summary-value amount-remaining">${formatNumber(item.remaining)} ‡∏ø</span>
              </div>
            </div>
            
            <div class="progress-bar">
              <div class="progress-fill" style="width: ${Math.min(percentage, 100)}%"></div>
            </div>
            <div class="progress-text">
              ‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ${percentage}%
            </div>
          </div>
          
          <div class="card-actions">
            <button class="btn btn-primary" onclick='openExpenseModal(${JSON.stringify(item).replace(/'/g, "&#39;")})'>
              üí∞ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢
            </button>
            <button class="btn btn-secondary" onclick='openHistoryModal(${JSON.stringify(item).replace(/'/g, "&#39;")})'>
              üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
            </button>
          </div>
        `;
        
        container.appendChild(card);
      });
    }
    
    function openExpenseModal(item) {
      selectedRowIndex = item.rowIndex;
      selectedItem = item;
      
      const details = [
        item.department,
        item.work,
        item.budgetType,
        item.category,
        item.expenseType,
        item.item
      ].filter(x => x).join(' > ');
      
      document.getElementById('modalProjectDetails').textContent = details;
      document.getElementById('expenseAmount').value = '';
      document.getElementById('expenseDescription').value = '';
      document.getElementById('expenseModal').classList.add('active');
    }
    
    function closeExpenseModal() {
      document.getElementById('expenseModal').classList.remove('active');
    }
    
    function openHistoryModal(item) {
      selectedItem = item;
      
      const details = [
        item.department,
        item.work,
        item.budgetType,
        item.category,
        item.expenseType,
        item.item
      ].filter(x => x).join(' > ');
      
      document.getElementById('historyProjectDetails').textContent = details;
      document.getElementById('historyModal').classList.add('active');
      document.getElementById('historyContainer').innerHTML = '<div class="loading">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>';
      
      google.script.run
        .withSuccessHandler(displayHistory)
        .withFailureHandler(function() {
          document.getElementById('historyContainer').innerHTML = 
            '<div style="color: red; padding: 20px;">‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ</div>';
        })
        .getTransactionHistory(item.rowIndex);
    }
    
    function closeHistoryModal() {
      document.getElementById('historyModal').classList.remove('active');
    }
    
    function displayHistory(history) {
      const container = document.getElementById('historyContainer');
      
      if (history.length === 0) {
        container.innerHTML = '<div style="padding: 20px; text-align: center; color: #666;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>';
        return;
      }
      
      container.innerHTML = '';
      history.forEach(item => {
        const date = new Date(item.timestamp);
        const dateStr = date.toLocaleString('th-TH', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        });
        
        const historyDiv = document.createElement('div');
        historyDiv.className = 'history-item';
        historyDiv.innerHTML = `
          <div class="history-date">üìÖ ${dateStr}</div>
          <div class="history-date">üë§ ${item.user}</div>
          <div class="history-amount">üíµ ‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢: ${formatNumber(item.amount)} ‡∏ö‡∏≤‡∏ó</div>
          <div class="history-desc">${item.description ? 'üìù ' + item.description : ''}</div>
          <div class="history-summary">
            ‡∏¢‡∏≠‡∏î‡πÄ‡∏ö‡∏¥‡∏Å‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°: ${formatNumber(item.newUsed)} ‡∏ø | ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${formatNumber(item.newRemaining)} ‡∏ø
          </div>
        `;
        container.appendChild(historyDiv);
      });
    }
    
    document.getElementById('expenseForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const amount = parseFloat(document.getElementById('expenseAmount').value);
      const description = document.getElementById('expenseDescription').value;
      
      if (amount <= 0) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
        return;
      }
      
      if (amount > selectedItem.remaining) {
        if (!confirm(`‚ö†Ô∏è ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (${formatNumber(selectedItem.remaining)} ‡∏ö‡∏≤‡∏ó)\n\n‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`)) {
          return;
        }
      }
      
      const submitBtn = e.target.querySelector('button[type="submit"]');
      submitBtn.disabled = true;
      submitBtn.textContent = '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...';
      
      google.script.run
        .withSuccessHandler(function(result) {
          submitBtn.disabled = false;
          submitBtn.textContent = '‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å';
          
          if (result.success) {
            alert('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
            closeExpenseModal();
            loadBudgetData();
          } else {
            alert('‚ùå ' + result.message);
          }
        })
        .withFailureHandler(function(error) {
          submitBtn.disabled = false;
          submitBtn.textContent = '‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å';
          alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error);
        })
        .recordExpense(selectedRowIndex, amount, description);
    });
    
    function showError(message) {
      document.getElementById('loadingDiv').style.display = 'none';
      document.getElementById('errorDiv').textContent = '‚ùå ' + message;
      document.getElementById('errorDiv').style.display = 'block';
    }
    
    function formatNumber(num) {
      return parseFloat(num).toLocaleString('th-TH', {
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      });
    }
    
    function logout() {
      if (confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
        window.open('https://accounts.google.com/Logout', '_blank');
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠ Login ‡∏î‡πâ‡∏ß‡∏¢ Account ‡∏≠‡∏∑‡πà‡∏ô');
      }
    }
  </script>
</body>
</html>
